---
import type { NavigationItem } from '@/components/navigation'
import NavigationItems from './NavigationItems.svelte'
import LuMenu from 'lucide-static/icons/menu.svg?raw'
import LuMoon from 'lucide-static/icons/moon.svg?raw'
import LuSun from 'lucide-static/icons/sun.svg?raw'

interface Props {
	navigationItems: NavigationItem[]
}

const { navigationItems } = Astro.props
---


<script>
	document.getElementById('theme-toggle')?.addEventListener('click', () => {
		document.documentElement.style.colorScheme = document.documentElement.style.colorScheme === 'dark' ? 'light' : 'dark'
		localStorage.setItem('theme', document.documentElement.style.colorScheme)
	})
</script>


<nav
	id="nav"
	popover="auto"
	data-sticky
	data-scroll-container data-sticky-container
>
	<header
		data-sticky
	>
		<a href="/">
			<picture>
				<source
					srcset="/logo-dark.svg"
					media="(prefers-color-scheme: dark)"
				/>
				<img
					src="/logo-light.svg"
					alt="WalletBeat Logo"
				/>
			</picture>
		</a>

		<menu>
			<li>
				<button
					type="button"
					id="theme-toggle"
					class="stack"
				>
					<span set:html={LuSun} />
					<span set:html={LuMoon} />
				</button>
			</li>

			<li>
				<button
					type="button"
					id="menu-toggle"
					popovertarget="nav"
				>
					<span set:html={LuMenu} />
				</button>
			</li>
		</menu>
	</header>

	<div
		id="nav-menu"
		data-sticky-container
	>
		<NavigationItems
			items={navigationItems}
			client:load
		/>
	</div>

	<footer
		data-sticky
	>
		<p>Wallets listed on this page are not official endorsements, and are provided for informational purposes only.</p>
	</footer>
</nav>


<style>
	nav {
		height: 100dvh;
		display: grid;
		grid-template-rows: auto 1fr auto;

		background-color: var(--navigation-bg);

		&[data-sticky-container] {
			--sticky-paddingBlockStart: var(--navigation-mobile-blockSize);
		}

		> header {
			block-size: var(--navigation-mobile-blockSize);
			box-shadow: 0 0 0 var(--separator-width) var(--border-color);

			display: flex;
			justify-content: space-between;
			align-items: center;
			padding: 1rem;

			a {
				display: flex;
				text-decoration: none;

				img {
					display: block;
					height: 2rem;
				}
			}

			menu {
				display: flex;
				align-items: center;
				gap: 0.5rem;

				li {
					display: contents;
				}

				button {
					svg {
						width: 1.25em;
						height: 1.25em;

						transition-property: color;
					}
				}

				#theme-toggle {
					> :first-child {
						color: light-dark(currentColor, transparent);
					}
					> :last-child {
						color: light-dark(transparent, currentColor);
					}
				}
			}
		}

		#nav-menu {
			display: grid;
			align-content: start;
			gap: 1em;
			padding: 1rem 0.75rem;

			&[data-sticky-container] {
				--sticky-paddingBlockStart: 1rem;
				--sticky-paddingBlockEnd: 1rem;
				--sticky-paddingInlineStart: 0.75rem;
				--sticky-paddingInlineEnd: 0.75rem;
			}
		}

		footer {
			padding: 1rem;

			p {
				padding: 0.75rem 1rem;
				line-height: 1.4;
				background-color: var(--accent-very-light);
				border-radius: 0.5rem;
				font-size: 0.875rem;
				color: var(--text-secondary);
			}
		}
	}

	@media not (max-width: 1024px) {
		li:has(#menu-toggle) {
			display: none;
		}
	}

	@media (max-width: 1024px) {
		nav {
			transition-property: block-size;

			block-size: auto;
			
			&[popover]:not(:popover-open) {
				block-size: var(--navigation-mobile-blockSize);
				overflow: hidden;
				overscroll-behavior: none;

				header ~ * {
					display: none;
					interactivity: inert;
					opacity: 0;
					pointer-events: none;
				}
			}
		}
	}
</style>
